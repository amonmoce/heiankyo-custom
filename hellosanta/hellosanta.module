<?php

//將/node這個頁面讓他變成not-found
function hellosanta_menu_alter(&$items) {
    $items['node']['page callback'] = 'drupal_not_found';
}

function hellosanta_form_commerce_cart_add_to_cart_form_alter(&$form, &$form_state, $form_id){
    if($form['#attributes']['class'][0]='commerce-add-to-cart'){
 		$form['submit']['#value']='加入購物車';
 	}
 	$form['remark'] = array(
	  '#title' => t('備註'),
	  '#type' => 'textarea',
	);
	$form['#submit'][]='remark_submit';
}

function remark_submit($form, &$form_state) {
	$line_item=$form_state['line_item'];
	$remark_data=$form_state['values']['remark'];
	$line_item->field_remark[LANGUAGE_NONE][0]['value'] = $remark_data;
	commerce_line_item_save($line_item);
}

 function hellosanta_form_alter(&$form, &$form_state, $form_id)
 {
 	
 	if($form_id=='views_form_commerce_cart_form_default'){
		 $form['#validate'][] = 'hellosanta_batch_commerce_form_validate';
	}

 }

function hellosanta_batch_commerce_form_validate(&$form, $form_state) {
	//dpm($form_state);
	$line_item_array=$form_state['order']->commerce_line_items['und'];
	//dpm($line_item_array);
	$edit_quantity_array=$form_state['values']['edit_quantity'];
	//dpm($edit_quantity_array);
	foreach ($line_item_array as $key => $value) {
		$line_id=$value['line_item_id'];
		$line=commerce_line_item_load($line_id);
		$product_id=$line->commerce_product['und'][0]['product_id'];
		$product=commerce_product_load($product_id);		
		$product_title=$product->title;
		$product_type=$product->type;
		// dpm($product_type);
		if($product_type=='class'){
			$pre_tt=isset($product->field_total_count['und'][0]['value'])?($product->field_total_count['und'][0]['value']):NULL;
			if($form_state['clicked_button']['#id'] == 'edit-checkout' && $edit_quantity_array[$key]>$pre_tt){
				form_set_error('quantity',t("很抱歉 <span>$product_title</span> 只剩下 $pre_tt 位"));
			}
		}
		elseif($product_type=='product'){
			$pre_count=isset($product->field_per_count_limit['und'][0]['value'])?($product->field_per_count_limit['und'][0]['value']):NULL;
			$pre_tt=isset($product->field_total_count['und'][0]['value'])?($product->field_total_count['und'][0]['value']):NULL;
			
			if ($form_state['clicked_button']['#id'] == 'edit-checkout' && $edit_quantity_array[$key]>$pre_count) {
				form_set_error('quantity',t("很抱歉 <span>$product_title</span> 一次最多只能訂購 $pre_count 條"));
			}
			if($form_state['clicked_button']['#id'] == 'edit-checkout' && $edit_quantity_array[$key]>$pre_tt){
				form_set_error('quantity',t("很抱歉 <span>$product_title</span> 今日只剩下 $pre_tt 條"));
			}
		}
		
	}
 }
//結帳完成將當日的數量扣掉
 function hellosanta_commerce_checkout_complete($order) {
 	$oid=$order->order_id;
 	$line_item_array=$order->commerce_line_items['und'];
 	foreach ($line_item_array as $key => $value) {
 		$line_id=$line_item_array[$key]['line_item_id'];
 		$line=commerce_line_item_load($line_id);
 		$line_item_type=$line->type;
 		if($line_item_type=='product'){
			$product_id=$line->commerce_product['und'][0]['product_id'];
			$product=commerce_product_load($product_id);
			$product_type=$product->type;
			if($product_type=='class' || $product_type=='product'){
				$pre_tt=$product->field_total_count['und'][0]['value'];
	 			$product->field_total_count['und'][0]['value']=$pre_tt-$line->quantity;
	 			commerce_product_save($product);
			}
	 	}

	}

}

function hellosanta_form_commerce_checkout_form_shipping_alter(&$form, &$form_state, $form_id)
 {
 	$order_array=$form_state['order'];
 	$line_item_array=$order_array->commerce_line_items['und'];
 	$odd_quantity='';  //兩個一盒的數量
 	foreach ($line_item_array as $key => $value){
 		$line_id=$line_item_array[$key]['line_item_id'];
 		$line=commerce_line_item_load($line_id);
 		$line_item_type=$line->type;
 		if($line_item_type=='product'){  //line_item有product跟shipping
 			$product_id=$line->commerce_product['und'][0]['product_id'];
 			$product=commerce_product_load($product_id);
 			$product_type=$product->type;
 			if($product_type=='product'){  //盒裝限制產品
 				$product_box_type=$product->field_box_limit['und'][0]['value'];
	 			if($product->field_box_limit['und'][0]['value']=='0'){  //兩個一盒
	 				$odd_quantity+=$line->quantity;
	 			}
 			}
 		}
 	}
 	if($odd_quantity%2==1){  //兩個裝一箱不裝滿一箱只能來店親取
 		$form['commerce_shipping']['shipping_service']['#default_value']='my_store';
		$form['commerce_shipping']['shipping_service']['#options']=array(
		'my_store'=>t('到店親取: NT$0.0'),
		);
		drupal_set_message(t('您所訂購的盒裝數量並未到達偶數盒，如想使用宅配請回到購物車重新選擇數量，來店親取則不受此限制，感謝您。'), 'status');
 	}
 }

function hellosanta_commerce_shipping_method_info() {
	$shipping_methods = array();
	$shipping_methods['hellosanta_shipping_method'] = array(
		'title' => t('hellosanta shipping method'),
		'description' => t('shipping method create by hellosanta.'),
		);
	return $shipping_methods;
}

function hellosanta_commerce_shipping_service_info() {
  $shipping_services = array();
  $shipping_services['deliver'] = array(
    'title' => t('宅配到府'),
    'display_title' => t('宅配到府'),
    'shipping_method' => 'hellosanta_shipping_method',
    'price_component' => 'shipping',
    'callbacks' => array(
      'rate' => 'hellosanta_deliver_rate',
      'details_form' => 'hellosanta_service_deliver_form',
      // 'details_form_validate' => 'hellosanta_service_details_form_validate',
      'details_form_submit' => 'hellosanta_service_details_form_submit',
    ),
  );
  $shipping_services['my_store'] = array(
    'title' => t('到店親取'),
    'display_title' => t('到店親取'),
    'shipping_method' => 'hellosanta_shipping_method',
    'price_component' => 'shipping',
    'callbacks' => array(
    	'rate' => 'hellosanta_my_store_rate',
    	'details_form' => 'hellosanta_service_deliver_form',
    	// 'details_form_validate' => 'hellosanta_service_details_form_validate',
    	'details_form_submit' => 'hellosanta_service_details_form_submit',
    ),
  );
  return $shipping_services;
}

/**
 * Shipping service callback: returns a base price array for a shipping service
 * calculated for the given order.
 */
//宅配到府
function hellosanta_deliver_rate($shipping_service, $order) {
	$line_item_array=$order->commerce_line_items['und'];
	$box='';
	$box_total='';
	foreach ($line_item_array as $key => $value) {
		$line_id=$order->commerce_line_items['und'][$key]['line_item_id'];
 		$line_item=commerce_line_item_load($line_id);
 		$line_item_type=$line_item->type;
 		if($line_item_type=='product'){  //line_item有product跟shipping
 			$product_id=$line_item->commerce_product['und'][0]['product_id'];
 			$product=commerce_product_load($product_id);
 			$product_type=$product->type;
 			if($product_type=='product'){  //盒裝限制產品
	 			$product_box_type=$product->field_box_limit['und'][0]['value'];
	 			if($product->field_box_limit['und'][0]['value']=='0'){  //兩個一裝
	 				$box=$line_item->quantity/2;  
	 				$box_total+=$box;
	 			}
	 			if($product->field_box_limit['und'][0]['value']=='1'){  //一個一裝
	 				$box=$line_item->quantity;
	 				$box_total+=$box;
	 			}
 			}
 			
 		}
	}
  $order_wrapper = entity_metadata_wrapper('commerce_order', $order);
  return array(
    'amount' => 1450*$box_total,  //單箱運費145
    'currency_code' => $order_wrapper->commerce_order_total->currency_code->value(),
    'data' => array(),
  );
}
//到店親取
function hellosanta_my_store_rate($shipping_service, $order) {
  $order_wrapper = entity_metadata_wrapper('commerce_order', $order);
  return array(
    'amount' => 0,
    'currency_code' => $order_wrapper->commerce_order_total->currency_code->value(),
    'data' => array(),
  );
}

function hellosanta_service_deliver_form($pane_form, $pane_values, $checkout_pane, $order, $shipping_service){
	$full_url=url('cart');
	  $form = array();
	  $format = 'Y-m-d H:i';
	  $pane_values['service_details'] += array(
	  	'time' => '',
	  	'shipping_description' => '',
	  	);
	$form['time'] = array(
	    '#type' => 'date_popup',
	    '#date_type' => DATE_DATETIME,
	    '#timepicker' => 'timepicker',
	    '#timepicker_options' => array(
	    	'rows' => 4,
	    	'hours' =>array(
	    	'starts'=> 9,
	    	'ends' => 21,
	    		),
		'minutes' => array(
		'starts' => 0,
		'ends' => 55,
		'interval' =>5,
		),
	    'showCloseButton' => TRUE,
	    'closeButtonText' => t('Close'),
	    ),
	    '#title' => t('請問您希望到店親取或宅配到府時間'),
	    '#date_format' => $format,
	    '#date_label_position' => 'within',
	    '#date_year_range' => '0:+2',
	    '#required' => TRUE,
	);
	$form['shipping_description'] = array(
		'#markup' => '<a href='.$full_url.'>回到購物車</a>',
		);
	return $form;
}

function hellosanta_service_details_form_submit($details_form, $details_values, $line_item){
	$oid=$line_item->order_id;
	$order_array=commerce_order_load($oid);
	$hope_time='';
	$hope_time=$details_form['time']['#value']['date']." ".$details_form['time']['#value']['time'];
	$pid=$order_array->commerce_customer_shipping['und'][0]['profile_id'];
	$porfile_array=commerce_customer_profile_load($pid);
	$porfile_array->field_hope_time['und'][0]['value'] =$hope_time;
	commerce_customer_profile_save($porfile_array);
}

?>
